Collecting type info for 1 module(s) ... 
:all-types
e/E.hs:(24,1)-(24,12): GHC.Internal.Types.IO ()
e/E.hs:(19,1)-(19,3): E.E -> E.E
e/E.hs:(5,1)-(5,3): GHC.Internal.Bignum.Integer.Integer
e/E.hs:(3,1)-(3,3): GHC.Internal.Bignum.Integer.Integer
e/E.hs:(7,1)-(7,4): GHC.Internal.Types.IO ()
e/E.hs:(15,3)-(15,6): GHC.Internal.Types.Int -> GHC.Internal.Base.String
e/E.hs:(22,3)-(22,6): E.E -> GHC.Internal.Base.String
e/E.hs:(25,3)-(25,10): GHC.Internal.Base.String -> GHC.Internal.Types.IO ()
e/E.hs:(25,12)-(25,37): GHC.Internal.Base.String
e/E.hs:(24,16)-(25,37): GHC.Internal.Types.IO ()
e/E.hs:(19,9)-(19,9): E.E
e/E.hs:(5,7)-(5,8): GHC.Internal.Bignum.Integer.Integer
e/E.hs:(3,7)-(3,7): GHC.Internal.Bignum.Integer.Integer
e/E.hs:(8,3)-(8,7): GHC.Internal.Bignum.Integer.Integer -> GHC.Internal.Types.IO ()
e/E.hs:(8,9)-(8,11): GHC.Internal.Bignum.Integer.Integer
e/E.hs:(8,3)-(8,11): GHC.Internal.Types.IO ()
e/E.hs:(9,3)-(9,7): GHC.Internal.Bignum.Integer.Integer -> GHC.Internal.Types.IO ()
e/E.hs:(9,9)-(9,11): GHC.Internal.Bignum.Integer.Integer
e/E.hs:(9,3)-(9,11): GHC.Internal.Types.IO ()
e/E.hs:(7,8)-(9,11): GHC.Internal.Types.IO ()
e/E.hs:(14,10)-(14,17): E.Test GHC.Internal.Types.Int
e/E.hs:(14,10)-(14,17): (GHC.Internal.Types.Int -> GHC.Internal.Base.String) -=> E.Test GHC.Internal.Types.Int
e/E.hs:(14,10)-(14,17): GHC.Internal.Types.Int -> GHC.Internal.Base.String
e/E.hs:(15,10)-(15,13): GHC.Internal.Types.Int -> GHC.Internal.Base.String
e/E.hs:(21,10)-(21,15): E.Test E.E
e/E.hs:(21,10)-(21,15): (E.E -> GHC.Internal.Base.String) -=> E.Test E.E
e/E.hs:(21,10)-(21,15): E.E -> GHC.Internal.Base.String
e/E.hs:(22,12)-(22,14): GHC.Internal.Base.String
e/E.hs:(19,5)-(19,5): E.E
e/E.hs:(22,8)-(22,8): E.E
:type-at
 :: Integer
 :: Int -> String
:loc-at
e/E.hs:(5,1)-(5,3)
:instances
instance Test E -- Defined at e/E.hs:21:10
instance Test E -- Defined at e/E.hs:21:10
