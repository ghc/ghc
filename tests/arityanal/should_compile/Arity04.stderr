
==================== Tidy Core ====================
Result size of Tidy Core = {terms: 34, types: 17, coercions: 0, joins: 0/0}

-- RHS size: {terms: 8, types: 3, coercions: 0, joins: 0/0}
f4g :: Int -> Int
[GblId,
 Arity=1,
 Str=<1!L>,
 Cpr=1,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True, WorkFree=True, Expandable=True, Guidance=ALWAYS_IF(arity=1,unsat_ok=True,boring_ok=False)
         Tmpl= \ (y [Occ=Once1!] :: Int) -> case y of { GHC.Types.I# x [Occ=Once1] -> GHC.Types.I# (GHC.Prim.+# x 1#) }}]
f4g = \ (y :: Int) -> case y of { GHC.Types.I# x -> GHC.Types.I# (GHC.Prim.+# x 1#) }

Rec {
-- RHS size: {terms: 17, types: 6, coercions: 0, joins: 0/0}
f4h [Occ=LoopBreaker] :: (Int -> Int) -> Int -> Int
[GblId, Arity=2, Str=<1C(1,L)><1P(SL)>, Unf=OtherCon []]
f4h
  = \ (f :: Int -> Int) (x :: Int) ->
      case x of wild { GHC.Types.I# x1 ->
      case x1 of wild1 {
        __DEFAULT -> f4h f (GHC.Types.I# (GHC.Prim.-# wild1 1#));
        0# -> f wild
      }
      }
end Rec }

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
F4.f1 :: Int
[GblId, Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True, WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 10}]
F4.f1 = GHC.Types.I# 9#

-- RHS size: {terms: 3, types: 0, coercions: 0, joins: 0/0}
f4 :: Int
[GblId, Unf=Unf{Src=<vanilla>, TopLvl=True, Value=False, ConLike=False, WorkFree=False, Expandable=False, Guidance=IF_ARGS [] 30 0}]
f4 = f4h f4g F4.f1



