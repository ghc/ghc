
==================== Tidy Core ====================
Result size of Tidy Core
  = {terms: 39, types: 29, coercions: 0, joins: 0/0}

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
Lib.$trModule4 :: GHC.Prim.Addr#
[GblId,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 20 0}]
Lib.$trModule4 = "main"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
Lib.$trModule3 :: GHC.Types.TrName
[GblId,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 10}]
Lib.$trModule3 = GHC.Types.TrNameS Lib.$trModule4

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
Lib.$trModule2 :: GHC.Prim.Addr#
[GblId,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 20 0}]
Lib.$trModule2 = "Lib"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
Lib.$trModule1 :: GHC.Types.TrName
[GblId,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 10}]
Lib.$trModule1 = GHC.Types.TrNameS Lib.$trModule2

-- RHS size: {terms: 3, types: 0, coercions: 0, joins: 0/0}
Lib.$trModule :: GHC.Types.Module
[GblId,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 10}]
Lib.$trModule = GHC.Types.Module Lib.$trModule3 Lib.$trModule1

-- RHS size: {terms: 5, types: 2, coercions: 0, joins: 0/0}
Lib.$wfoo [InlPrag=NOINLINE]
  :: GHC.Prim.Int# -> GHC.Prim.Int# -> GHC.Prim.Int#
[GblId, Arity=2, Str=<L><L>, Unf=OtherCon []]
Lib.$wfoo
  = \ (ww_sF3 :: GHC.Prim.Int#) (ww1_sF9 :: GHC.Prim.Int#) ->
      GHC.Prim.+# ww_sF3 ww1_sF9

-- RHS size: {terms: 18, types: 14, coercions: 0, joins: 0/0}
foo [InlPrag=[final]] :: (Int, Int) -> Int -> Int
[GblId,
 Arity=2,
 Str=<1!P(1!L,A)><1!L>,
 Cpr=1,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=2,unsat_ok=True,boring_ok=False)
         Tmpl= \ (ds_sEZ [Occ=Once1!] :: (Int, Int))
                 (z_sF7 [Occ=Once1!] :: Int) ->
                 case ds_sEZ of { (ww_sF1 [Occ=Once1!], _ [Occ=Dead]) ->
                 case ww_sF1 of { GHC.Types.I# ww2_sF3 [Occ=Once1] ->
                 case z_sF7 of { GHC.Types.I# ww3_sF9 [Occ=Once1] ->
                 case Lib.$wfoo ww2_sF3 ww3_sF9 of ww4_sFe [Occ=Once1]
                 { __DEFAULT ->
                 GHC.Types.I# ww4_sFe
                 }
                 }
                 }
                 }}]
foo
  = \ (ds_sEZ :: (Int, Int)) (z_sF7 :: Int) ->
      case ds_sEZ of { (ww_sF1, ww1_sF5) ->
      case ww_sF1 of { GHC.Types.I# ww2_sF3 ->
      case z_sF7 of { GHC.Types.I# ww3_sF9 ->
      case Lib.$wfoo ww2_sF3 ww3_sF9 of ww4_sFe { __DEFAULT ->
      GHC.Types.I# ww4_sFe
      }
      }
      }
      }



