
==================== Tidy Core ====================
Result size of Tidy Core
  = {terms: 48, types: 81, coercions: 0, joins: 0/0}

-- RHS size: {terms: 8, types: 23, coercions: 0, joins: 0/0}
boring [InlPrag=NOINLINE]
  :: (# Int, Int, Int #) -> (# Int, Int, Int #)
[GblId, Arity=1, Str=<1!P(L,L,L)>, Cpr=1, Unf=OtherCon []]
boring
  = \ (ds :: (# Int, Int, Int #)) ->
      case ds of { (# x, y, z #) -> (# y, z, x #) }

-- RHS size: {terms: 5, types: 2, coercions: 0, joins: 0/0}
T22388.$winteresting [InlPrag=NOINLINE]
  :: GHC.Prim.Int# -> GHC.Prim.Int# -> GHC.Prim.Int#
[GblId, Arity=2, Str=<L><L>, Unf=OtherCon []]
T22388.$winteresting
  = \ (ww :: GHC.Prim.Int#) (ww1 :: GHC.Prim.Int#) ->
      GHC.Prim.+# ww ww1

-- RHS size: {terms: 18, types: 24, coercions: 0, joins: 0/0}
interesting [InlPrag=NOINLINE[final]]
  :: (# Int, Int, Int #) -> (# Int #)
[GblId,
 Arity=1,
 Str=<1!P(1!P(L),1!P(L),A)>,
 Cpr=1(1),
 Unf=Unf{Src=StableSystem, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=1,unsat_ok=True,boring_ok=False)
         Tmpl= \ (ds [Occ=Once1!] :: (# Int, Int, Int #)) ->
                 case ds of
                 { (# ww [Occ=Once1!], ww1 [Occ=Once1!], _ [Occ=Dead] #) ->
                 case ww of { GHC.Types.I# ww3 [Occ=Once1] ->
                 case ww1 of { GHC.Types.I# ww4 [Occ=Once1] ->
                 case T22388.$winteresting ww3 ww4 of ww5 [Occ=Once1] { __DEFAULT ->
                 (# GHC.Types.I# ww5 #)
                 }
                 }
                 }
                 }}]
interesting
  = \ (ds :: (# Int, Int, Int #)) ->
      case ds of { (# ww, ww1, ww2 #) ->
      case ww of { GHC.Types.I# ww3 ->
      case ww1 of { GHC.Types.I# ww4 ->
      case T22388.$winteresting ww3 ww4 of ww5 { __DEFAULT ->
      (# GHC.Types.I# ww5 #)
      }
      }
      }
      }

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
T22388.$trModule4 :: GHC.Prim.Addr#
[GblId,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 20 0}]
T22388.$trModule4 = "main"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
T22388.$trModule3 :: GHC.Types.TrName
[GblId,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 10}]
T22388.$trModule3 = GHC.Types.TrNameS T22388.$trModule4

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
T22388.$trModule2 :: GHC.Prim.Addr#
[GblId,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 30 0}]
T22388.$trModule2 = "T22388"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
T22388.$trModule1 :: GHC.Types.TrName
[GblId,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 10}]
T22388.$trModule1 = GHC.Types.TrNameS T22388.$trModule2

-- RHS size: {terms: 3, types: 0, coercions: 0, joins: 0/0}
T22388.$trModule :: GHC.Types.Module
[GblId,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 10}]
T22388.$trModule
  = GHC.Types.Module T22388.$trModule3 T22388.$trModule1



