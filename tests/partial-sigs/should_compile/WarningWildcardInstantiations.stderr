TYPE SIGNATURES
  bar :: forall {t} {w}. t -> (t -> w) -> w
  foo :: forall {a}. (Show a, Enum a) => a -> String
Dependent modules: []
Dependent packages: [(normal, base-4.21.0.0)]
WarningWildcardInstantiations.hs:5:14: warning: [GHC-88464] [-Wpartial-type-signatures (in -Wdefault)]
    • Found type wildcard ‘_a’ standing for ‘a’
      Where: ‘a’ is a rigid type variable bound by
               the inferred type of foo :: (Show a, Enum a) => a -> String
               at WarningWildcardInstantiations.hs:6:1-21
    • In the type signature: foo :: (Show _a, _) => _a -> _

WarningWildcardInstantiations.hs:5:18: warning: [GHC-88464] [-Wpartial-type-signatures (in -Wdefault)]
    • Found extra-constraints wildcard standing for ‘Enum a’
      Where: ‘a’ is a rigid type variable bound by
               the inferred type of foo :: (Show a, Enum a) => a -> String
               at WarningWildcardInstantiations.hs:6:1-21
    • In the type signature: foo :: (Show _a, _) => _a -> _

WarningWildcardInstantiations.hs:5:30: warning: [GHC-88464] [-Wpartial-type-signatures (in -Wdefault)]
    • Found type wildcard ‘_’ standing for ‘String’
    • In the type signature: foo :: (Show _a, _) => _a -> _

WarningWildcardInstantiations.hs:8:8: warning: [GHC-88464] [-Wpartial-type-signatures (in -Wdefault)]
    • Found type wildcard ‘_’ standing for ‘t’
      Where: ‘t’ is a rigid type variable bound by
               the inferred type of bar :: t -> (t -> w) -> w
               at WarningWildcardInstantiations.hs:9:1-13
    • In the type signature: bar :: _ -> _ -> _

WarningWildcardInstantiations.hs:8:13: warning: [GHC-88464] [-Wpartial-type-signatures (in -Wdefault)]
    • Found type wildcard ‘_’ standing for ‘t -> w’
      Where: ‘t’, ‘w’ are rigid type variables bound by
               the inferred type of bar :: t -> (t -> w) -> w
               at WarningWildcardInstantiations.hs:9:1-13
    • In the type signature: bar :: _ -> _ -> _

WarningWildcardInstantiations.hs:8:18: warning: [GHC-88464] [-Wpartial-type-signatures (in -Wdefault)]
    • Found type wildcard ‘_’ standing for ‘w’
      Where: ‘w’ is a rigid type variable bound by
               the inferred type of bar :: t -> (t -> w) -> w
               at WarningWildcardInstantiations.hs:9:1-13
    • In the type signature: bar :: _ -> _ -> _

