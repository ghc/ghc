[1 of 2] Compiling Splices          ( Splices.hs, Splices.o )
[2 of 2] Compiling SplicesUsed      ( SplicesUsed.hs, SplicesUsed.o )

SplicesUsed.hs:7:15: warning: [GHC-88464] [-Wpartial-type-signatures (in -Wdefault)]
    • Found type wildcard ‘_’ standing for ‘Maybe Bool’
    • In the type signature: maybeBool :: _

SplicesUsed.hs:8:14: warning: [GHC-88464] [-Wpartial-type-signatures (in -Wdefault)]
    • Found type wildcard ‘_a’ standing for ‘w’
      Where: ‘w’ is a rigid type variable bound by
               the inferred type of <expression> :: w -> w
               at SplicesUsed.hs:8:14-23
    • In an expression type signature: _a -> _a
      In the expression: (id :: _a -> _a) (Just True :: Maybe _)
      In an equation for ‘maybeBool’:
          maybeBool = (id :: _a -> _a) (Just True :: Maybe _)
    • Relevant bindings include
        maybeBool :: Maybe Bool (bound at SplicesUsed.hs:8:1)

SplicesUsed.hs:8:26: warning: [GHC-88464] [-Wpartial-type-signatures (in -Wdefault)]
    • Found type wildcard ‘_’ standing for ‘Bool’
    • In the first argument of ‘Maybe’, namely ‘_’
      In an expression type signature: Maybe _
      In the first argument of ‘id :: _a -> _a’, namely
        ‘(Just True :: Maybe _)’
    • Relevant bindings include
        maybeBool :: Maybe Bool (bound at SplicesUsed.hs:8:1)

SplicesUsed.hs:10:16: warning: [GHC-88464] [-Wpartial-type-signatures (in -Wdefault)]
    • Found type wildcard ‘_’ standing for ‘(Char, a)’
      Where: ‘a’ is a rigid type variable bound by
               the inferred type of charA :: a -> (Char, a)
               at SplicesUsed.hs:10:1-26
    • In the type signature: charA :: a -> _

SplicesUsed.hs:13:13: warning: [GHC-88464] [-Wpartial-type-signatures (in -Wdefault)]
    • Found type wildcard ‘_’ standing for ‘a -> Bool’
      Where: ‘a’ is a rigid type variable bound by
               the inferred type of filter' :: (a -> Bool) -> [a] -> [a]
               at SplicesUsed.hs:14:1-16
    • In the type signature: filter' :: (_ -> _ -> _)

SplicesUsed.hs:13:13: warning: [GHC-88464] [-Wpartial-type-signatures (in -Wdefault)]
    • Found type wildcard ‘_’ standing for ‘[a]’
      Where: ‘a’ is a rigid type variable bound by
               the inferred type of filter' :: (a -> Bool) -> [a] -> [a]
               at SplicesUsed.hs:14:1-16
    • In the type signature: filter' :: (_ -> _ -> _)

SplicesUsed.hs:13:13: warning: [GHC-88464] [-Wpartial-type-signatures (in -Wdefault)]
    • Found type wildcard ‘_’ standing for ‘[a]’
      Where: ‘a’ is a rigid type variable bound by
               the inferred type of filter' :: (a -> Bool) -> [a] -> [a]
               at SplicesUsed.hs:14:1-16
    • In the type signature: filter' :: (_ -> _ -> _)

SplicesUsed.hs:16:2: warning: [GHC-88464] [-Wpartial-type-signatures (in -Wdefault)]
    • Found extra-constraints wildcard standing for ‘Eq a’
      Where: ‘a’ is a rigid type variable bound by
               the inferred type of foo :: Eq a => a -> a -> Bool
               at SplicesUsed.hs:16:2-11
    • In the type signature: foo :: _ => _

SplicesUsed.hs:16:2: warning: [GHC-88464] [-Wpartial-type-signatures (in -Wdefault)]
    • Found type wildcard ‘_’ standing for ‘a -> a -> Bool’
      Where: ‘a’ is a rigid type variable bound by
               the inferred type of foo :: Eq a => a -> a -> Bool
               at SplicesUsed.hs:16:2-11
    • In the type signature: foo :: _ => _

SplicesUsed.hs:18:2: warning: [GHC-88464] [-Wpartial-type-signatures (in -Wdefault)]
    • Found type wildcard ‘_a’ standing for ‘Bool’
    • In the type signature: bar :: _a -> _b -> (_a, _b)

SplicesUsed.hs:18:2: warning: [GHC-88464] [-Wpartial-type-signatures (in -Wdefault)]
    • Found type wildcard ‘_b’ standing for ‘w’
      Where: ‘w’ is a rigid type variable bound by
               the inferred type of bar :: Bool -> w -> (Bool, w)
               at SplicesUsed.hs:18:2-11
    • In the type signature: bar :: _a -> _b -> (_a, _b)
