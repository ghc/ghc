unit bar where
    signature H1(bar) where
        data A = MkA { foo :: Int, bar :: Bool }

unit foo where
    signature H2(foo) where
        data A = MkA { foo :: Int, bar :: Bool }

unit impl where
    module M1 where
        data A = MkA { foo :: Int, bar :: Bool }
    module M2 where
        data A = MkA { foo :: Int, bar :: Bool }
    module M(foo, bar) where
        import M1(foo)
        import M2(bar)

-- Kind of boring test now haha

unit barimpl where
    dependency bar[H1=impl:M]

unit fooimpl where
    dependency foo[H2=impl:M]

unit foobarimpl where
    dependency foo[H2=impl:M]
    dependency bar[H1=impl:M]
