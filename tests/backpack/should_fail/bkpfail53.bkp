
unit p where
    signature H where
        data T = T Int
    module I(module H) where
        import H
        x :: Int -> T
        x = T
unit q where
    dependency p[H=<A>]
    module B where
        data T = T Bool
    signature A where
        import qualified B
        type T = B.T
    module C where
        import qualified B
        import qualified I
        x :: Int -> B.T
        x = I.x
-- signatures don't merge
