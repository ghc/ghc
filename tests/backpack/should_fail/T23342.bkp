unit p where
  signature H where
    import Data.Kind
    data T1
    data T2
    data T3

unit q where
  module H where
    import Data.Kind
    class C a where {}
    data S

    type T1 = forall (a :: Type). a -> a
    type T2 = forall (a :: Type). C a => a
    type T3 = C S => S -> S

unit r where
  dependency q
  dependency p[H=q:H]

