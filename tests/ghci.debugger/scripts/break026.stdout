Stopped in Test.foldl, break026.hs:5:16-22
_result :: Int = _
c :: Int = 0
go :: Int -> [t1] -> Int = _
xs :: [t1] = _
Stopped in Test.foldl.go, break026.hs:7:23-35
_result :: Int = _
c :: Int = 0
f :: Int -> Int -> Int = _
x :: Int = 1
xs :: [Int] = _
Stopped in Test.foldl.go, break026.hs:7:23-35
_result :: Int = _
c :: Int = _
f :: Int -> Int -> Int = _
x :: Int = 2
xs :: [Int] = _
c = 1
Stopped in Test.foldl, break026.hs:5:16-22
_result :: Int = _
c :: Int = 0
go :: Int -> [t1] -> Int = _
xs :: [t1] = _
Stopped in Test.foldl.go, break026.hs:7:23-35
_result :: Int = _
c :: Int = 0
f :: Int -> Int -> Int = _
x :: Int = 1
xs :: [Int] = _
Stopped in Test.foldl.go, break026.hs:7:23-35
_result :: Int = _
c :: Int = _
f :: Int -> Int -> Int = _
x :: Int = 2
xs :: [Int] = _
Stopped in Test.foldl.go, break026.hs:7:27-31
_result :: Int = _
c :: Int = 0
f :: Int -> Int -> Int = _
x :: Int = 1
()
1
