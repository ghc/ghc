main_0 = do {case 0 of
             {0 -> 1};
             GHC.Internal.System.IO.putStrLn "pass"}
main_0 = do {let {day_1 = "mon"};
             let {num_2 = case day_1 of
                          {"mon" -> 0;
                           "tue" -> 1;
                           "wed" -> 3;
                           "thu" -> 4;
                           "fri" -> 5;
                           "sat" -> 6;
                           "sun" -> 7;
                           _ -> 8}};
             GHC.Internal.System.IO.putStrLn (GHC.Internal.Show.show day_1) GHC.Internal.Base.++ " is " (GHC.Internal.Show.show num_2)}
main_0 = do {let {color_1 = "red"};
             let {id_2 = 1};
             print_color_3 (color_1, id_2)}
    where {print_color_3 (c_4,
                          i_5) = GHC.Internal.System.IO.putStrLn (c_4 GHC.Internal.Base.++ (" is " GHC.Internal.Base.++ GHC.Internal.Show.show i_5))}
main_0 = do {let {colors_1 = ["red", "green", "blue"]};
             let {ids_2 = GHC.Internal.Base.map (\case
                                                 {"red" -> 0; "green" -> 1; "blue" -> 2}) colors_1};
             GHC.Internal.System.IO.putStrLn (GHC.Internal.Show.show ids_2)}
