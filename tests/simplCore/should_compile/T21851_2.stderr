[1 of 2] Compiling T21851_2a        ( T21851_2a.hs, T21851_2a.o )
[2 of 2] Compiling T21851_2         ( T21851_2.hs, T21851_2.o )

==================== Tidy Core ====================
Result size of Tidy Core
  = {terms: 107, types: 96, coercions: 0, joins: 0/0}

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
lvl :: Integer
[GblId, Unf=OtherCon []]
lvl = GHC.Internal.Bignum.Integer.IS 2#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
lvl1 :: Integer
[GblId, Unf=OtherCon []]
lvl1 = GHC.Internal.Bignum.Integer.IS 0#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
lvl2 :: Integer
[GblId, Unf=OtherCon []]
lvl2 = GHC.Internal.Bignum.Integer.IS 10#

Rec {
-- RHS size: {terms: 25, types: 5, coercions: 0, joins: 0/0}
T21851_2.$s$wwombat [InlPrag=[~], Occ=LoopBreaker]
  :: GHC.Internal.Prim.Int# -> Bool -> [Char]
[GblId, Arity=2, Str=<1L><ML>, Unf=OtherCon []]
T21851_2.$s$wwombat
  = \ (ww :: GHC.Internal.Prim.Int#) (y :: Bool) ->
      case ww of ds {
        __DEFAULT ->
          case y of {
            False ->
              GHC.Internal.CString.unpackAppendCString#
                GHC.Internal.Show.$fShowBool2
                (T21851_2.$s$wwombat
                   (GHC.Internal.Prim.-# ds 1#) GHC.Internal.Types.False);
            True ->
              GHC.Internal.CString.unpackAppendCString#
                GHC.Internal.Show.$fShowBool1
                (T21851_2.$s$wwombat
                   (GHC.Internal.Prim.-# ds 1#) GHC.Internal.Types.True)
          };
        0# -> GHC.Internal.Types.[] @Char
      }
end Rec }

Rec {
-- RHS size: {terms: 16, types: 6, coercions: 0, joins: 0/0}
T21851_2.$w$sg [InlPrag=[2], Occ=LoopBreaker]
  :: GHC.Internal.Prim.Int# -> (# GHC.Internal.Prim.Int#, String #)
[GblId, Arity=1, Str=<L>, Unf=OtherCon []]
T21851_2.$w$sg
  = \ (ww :: GHC.Internal.Prim.Int#) ->
      case GHC.Internal.Prim.<# ww 10# of {
        __DEFAULT -> T21851_2.$w$sg (GHC.Internal.Prim.-# ww 2#);
        1# -> (# 0#, T21851_2.$s$wwombat ww GHC.Internal.Types.True #)
      }
end Rec }

-- RHS size: {terms: 3, types: 3, coercions: 0, joins: 0/0}
lvl3 :: forall a. [Char]
[GblId]
lvl3 = \ (@a) -> T21851_2a.$wf @a @Bool GHC.Internal.Types.(##)

Rec {
-- RHS size: {terms: 27, types: 18, coercions: 0, joins: 0/0}
T21851_2.$wg [InlPrag=[2], Occ=LoopBreaker]
  :: forall a. (Ord a, Num a) => a -> (# a, String #)
[GblId[StrictWorker([!])],
 Arity=3,
 Str=<SP(A,A,SC(S,C(1,L)),A,A,A,A,A)><LP(A,LC(L,C(1,L)),A,A,A,A,L)><L>,
 Unf=OtherCon []]
T21851_2.$wg
  = \ (@a) ($dOrd :: Ord a) ($dNum :: Num a) (n :: a) ->
      case < @a $dOrd n (fromInteger @a $dNum lvl2) of {
        False ->
          T21851_2.$wg
            @a $dOrd $dNum (- @a $dNum n (fromInteger @a $dNum lvl));
        True -> (# fromInteger @a $dNum lvl1, lvl3 @a #)
      }
end Rec }

-- RHS size: {terms: 13, types: 16, coercions: 0, joins: 0/0}
g [InlPrag=[2]] :: forall a. (Ord a, Num a) => a -> (a, String)
[GblId,
 Arity=3,
 Str=<SP(A,A,SC(S,C(1,L)),A,A,A,A,A)><LP(A,LC(L,C(1,L)),A,A,A,A,L)><L>,
 Cpr=1,
 Unf=Unf{Src=StableSystem, TopLvl=True,
         Value=True, ConLike=True, WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=3,unsat_ok=True,boring_ok=False)
         Tmpl= \ (@a)
                 ($dOrd [Occ=Once1] :: Ord a)
                 ($dNum [Occ=Once1] :: Num a)
                 (n [Occ=Once1] :: a) ->
                 case T21851_2.$wg @a $dOrd $dNum n of
                 { (# ww [Occ=Once1], ww1 [Occ=Once1] #) ->
                 (ww, ww1)
                 }}]
g = \ (@a) ($dOrd :: Ord a) ($dNum :: Num a) (n :: a) ->
      case T21851_2.$wg @a $dOrd $dNum n of { (# ww, ww1 #) ->
      (ww, ww1)
      }

-- RHS size: {terms: 8, types: 9, coercions: 0, joins: 0/0}
h :: (Int, String)
[GblId,
 Unf=Unf{Src=<vanilla>, TopLvl=True,
         Value=False, ConLike=False, WorkFree=False, Expandable=False,
         Guidance=IF_ARGS [] 50 10}]
h = case T21851_2.$w$sg 3# of { (# ww, ww1 #) ->
    (GHC.Internal.Types.I# ww, ww1)
    }


------ Local rules for imported ids --------
"SPEC/T21851_2 $wwombat @Bool" [2]
    forall ($dShow :: Show Bool).
      T21851_2a.$wwombat @Bool $dShow
      = T21851_2.$s$wwombat


