T26117.hs:17:10: warning: [GHC-06201] [-Wmissing-methods (in -Wdefault)]
    • No explicit implementation for
        ‘op2’
    • In the instance declaration for ‘C a [b]’


==================== Tidy Core ====================
Result size of Tidy Core
  = {terms: 196, types: 296, coercions: 2, joins: 0/0}

-- RHS size: {terms: 7, types: 18, coercions: 0, joins: 0/0}
op1 [InlPrag=[~]] :: forall a b. C a b => F a -> a -> b -> Int
[GblId[ClassOp],
 Arity=1,
 Str=<S!P(SL,A)>,
 Unf=Unf{Src=StableSystem, TopLvl=True,
         Value=True, ConLike=True, WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=1,unsat_ok=False,boring_ok=False)
         Tmpl= \ (@a) (@b) (v [Occ=Once1!] :: C a b) ->
                 case v of { T26117.C:C v2 [Occ=Once1] _ [Occ=Dead] -> v2 }}]
op1
  = \ (@a) (@b) (v :: C a b) ->
      case v of v1 { T26117.C:C v2 v3 -> v2 }

-- RHS size: {terms: 7, types: 18, coercions: 0, joins: 0/0}
op2 [InlPrag=[~]] :: forall a b. C a b => F a -> a -> b -> Int
[GblId[ClassOp],
 Arity=1,
 Str=<S!P(A,SL)>,
 Unf=Unf{Src=StableSystem, TopLvl=True,
         Value=True, ConLike=True, WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=1,unsat_ok=False,boring_ok=False)
         Tmpl= \ (@a) (@b) (v [Occ=Once1!] :: C a b) ->
                 case v of { T26117.C:C _ [Occ=Dead] v3 [Occ=Once1] -> v3 }}]
op2
  = \ (@a) (@b) (v :: C a b) ->
      case v of v1 { T26117.C:C v2 v3 -> v3 }

-- RHS size: {terms: 7, types: 17, coercions: 0, joins: 0/0}
T26117.$p1D [InlPrag=[~]] :: forall a b. D a b => Eq (F a)
[GblId[ClassOp],
 Arity=1,
 Str=<S!P(SL,A,A)>,
 Unf=Unf{Src=StableSystem, TopLvl=True,
         Value=True, ConLike=True, WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=1,unsat_ok=False,boring_ok=False)
         Tmpl= \ (@a) (@b) (v [Occ=Once1!] :: D a b) ->
                 case v of { T26117.C:D v2 [Occ=Once1] _ [Occ=Dead] _ [Occ=Dead] ->
                 v2
                 }}]
T26117.$p1D
  = \ (@a) (@b) (v :: D a b) ->
      case v of v1 { T26117.C:D v2 v3 v4 -> v2 }

-- RHS size: {terms: 7, types: 17, coercions: 0, joins: 0/0}
dop1 [InlPrag=[~]] :: forall a b. D a b => a -> b -> b
[GblId[ClassOp],
 Arity=1,
 Str=<S!P(A,SL,A)>,
 Unf=Unf{Src=StableSystem, TopLvl=True,
         Value=True, ConLike=True, WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=1,unsat_ok=False,boring_ok=False)
         Tmpl= \ (@a) (@b) (v [Occ=Once1!] :: D a b) ->
                 case v of { T26117.C:D _ [Occ=Dead] v3 [Occ=Once1] _ [Occ=Dead] ->
                 v3
                 }}]
dop1
  = \ (@a) (@b) (v :: D a b) ->
      case v of v1 { T26117.C:D v2 v3 v4 -> v3 }

-- RHS size: {terms: 7, types: 17, coercions: 0, joins: 0/0}
dop2 [InlPrag=[~]] :: forall a b. D a b => a -> b -> b
[GblId[ClassOp],
 Arity=1,
 Str=<S!P(A,A,SL)>,
 Unf=Unf{Src=StableSystem, TopLvl=True,
         Value=True, ConLike=True, WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=1,unsat_ok=False,boring_ok=False)
         Tmpl= \ (@a) (@b) (v [Occ=Once1!] :: D a b) ->
                 case v of { T26117.C:D _ [Occ=Dead] _ [Occ=Dead] v4 [Occ=Once1] ->
                 v4
                 }}]
dop2
  = \ (@a) (@b) (v :: D a b) ->
      case v of v1 { T26117.C:D v2 v3 v4 -> v4 }

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
T26117.$fCaList1 :: GHC.Internal.Prim.Addr#
[GblId,
 Unf=Unf{Src=<vanilla>, TopLvl=True,
         Value=True, ConLike=True, WorkFree=True, Expandable=True,
         Guidance=IF_ARGS [] 70 0}]
T26117.$fCaList1 = "T26117.hs:17:10-37|\CANop2\EM"#

-- RHS size: {terms: 6, types: 15, coercions: 0, joins: 0/0}
T26117.$fCaList_$cop2 [InlPrag=[2]]
  :: forall a b. (Eq (F a), D a b) => F a -> a -> [b] -> Int
[GblId,
 Arity=2,
 Str=<B><B>b,
 Cpr=b,
 Unf=Unf{Src=StableSystem, TopLvl=True,
         Value=True, ConLike=True, WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=2,unsat_ok=True,boring_ok=True)
         Tmpl= \ (@a) (@b) _ [Occ=Dead] _ [Occ=Dead] ->
                 GHC.Internal.Control.Exception.Base.noMethodBindingError
                   @GHC.Internal.Types.LiftedRep
                   @(F a -> a -> [b] -> Int)
                   T26117.$fCaList1}]
T26117.$fCaList_$cop2
  = \ (@a) (@b) _ [Occ=Dead] _ [Occ=Dead] ->
      GHC.Internal.Control.Exception.Base.noMethodBindingError
        @GHC.Internal.Types.LiftedRep
        @(F a -> a -> [b] -> Int)
        T26117.$fCaList1

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
T26117.$fCaList3 :: Int
[GblId,
 Unf=Unf{Src=<vanilla>, TopLvl=True,
         Value=True, ConLike=True, WorkFree=True, Expandable=True,
         Guidance=IF_ARGS [] 10 10}]
T26117.$fCaList3 = GHC.Internal.Types.I# 4#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
T26117.$fCaList2 :: Int
[GblId,
 Unf=Unf{Src=<vanilla>, TopLvl=True,
         Value=True, ConLike=True, WorkFree=True, Expandable=True,
         Guidance=IF_ARGS [] 10 10}]
T26117.$fCaList2 = GHC.Internal.Types.I# 3#

-- RHS size: {terms: 8, types: 7, coercions: 2, joins: 0/0}
lvl :: forall b. F Int -> Int -> [b] -> Int
[GblId, Arity=3, Str=<1A><A><A>, Cpr=1, Unf=OtherCon []]
lvl
  = \ (@b) (x :: F Int) _ [Occ=Dead] _ [Occ=Dead] ->
      case x `cast` (Sub T26117.D:R:FInt :: F Int ~R# Bool) of lwild
      { __DEFAULT ->
      T26117.$fCaList2
      }

-- RHS size: {terms: 3, types: 8, coercions: 0, joins: 0/0}
lvl1 :: forall b. F Int -> Int -> [b] -> Int
[GblId, Str=b, Cpr=b]
lvl1
  = \ (@b) ->
      GHC.Internal.Control.Exception.Base.noMethodBindingError
        @GHC.Internal.Types.LiftedRep
        @(F Int -> Int -> [b] -> Int)
        T26117.$fCaList1

-- RHS size: {terms: 4, types: 6, coercions: 0, joins: 0/0}
lvl2 :: forall b. C Int [b]
[GblId, Unf=OtherCon []]
lvl2 = \ (@b) -> T26117.C:C @Int @[b] (lvl @b) (lvl1 @b)

-- RHS size: {terms: 3, types: 5, coercions: 0, joins: 0/0}
T26117.$fCaList_$s$fCaList [InlPrag=CONLIKE]
  :: forall b. D Int b => C Int [b]
[GblId[DFunId],
 Arity=1,
 Str=<A>,
 Unf=DFun: \ (@b) ($dD :: D Int b) ->
       T26117.C:C TYPE: Int
                  TYPE: [b]
                  \ (x :: F Int) _ [Occ=Dead] _ [Occ=Dead] ->
                    case GHC.Internal.Prim.dataToTagSmall#
                           @GHC.Internal.Types.Lifted
                           @Bool
                           (x `cast` (Sub T26117.D:R:FInt :: F Int ~R# Bool))
                    of a# [Occ=Once1]
                    { __DEFAULT ->
                    case GHC.Internal.Prim.dataToTagSmall#
                           @GHC.Internal.Types.Lifted
                           @Bool
                           (x `cast` (Sub T26117.D:R:FInt :: F Int ~R# Bool))
                    of b# [Occ=Once1]
                    { __DEFAULT ->
                    case GHC.Internal.Prim.==# a# b# of {
                      __DEFAULT -> GHC.Internal.Types.I# 4#;
                      1# -> GHC.Internal.Types.I# 3#
                    }
                    }
                    }
                  GHC.Internal.Control.Exception.Base.noMethodBindingError
                    @GHC.Internal.Types.LiftedRep
                    @(F Int -> Int -> [b] -> Int)
                    "T26117.hs:17:10-37|\CANop2\EM"#]
T26117.$fCaList_$s$fCaList = \ (@b) _ [Occ=Dead] -> lvl2 @b

-- RHS size: {terms: 4, types: 9, coercions: 0, joins: 0/0}
lvl3 :: forall b a. F a -> a -> [b] -> Int
[GblId, Str=b, Cpr=b]
lvl3
  = \ (@b) (@a) ->
      GHC.Internal.Control.Exception.Base.noMethodBindingError
        @GHC.Internal.Types.LiftedRep
        @(F a -> a -> [b] -> Int)
        T26117.$fCaList1

-- RHS size: {terms: 18, types: 21, coercions: 0, joins: 0/0}
T26117.$fCaList [InlPrag=CONLIKE]
  :: forall a b. (Eq (F a), D a b) => C a [b]
[GblId[DFunId],
 Arity=2,
 Str=<LP(SC(S,C(1,L)),A)><A>,
 Unf=DFun: \ (@a) (@b) (v :: Eq (F a)) (v1 :: D a b) ->
       T26117.C:C TYPE: a
                  TYPE: [b]
                  \ (x :: F a) _ [Occ=Dead] _ [Occ=Dead] ->
                    case == @(F a) v x x of {
                      False -> T26117.$fCaList3;
                      True -> T26117.$fCaList2
                    }
                  T26117.$fCaList_$cop2 @a @b v v1]
T26117.$fCaList
  = \ (@a) (@b) ($dEq :: Eq (F a)) _ [Occ=Dead] ->
      T26117.C:C
        @a
        @[b]
        (\ (x :: F a) _ [Occ=Dead] _ [Occ=Dead] ->
           case == @(F a) $dEq x x of {
             False -> T26117.$fCaList3;
             True -> T26117.$fCaList2
           })
        (lvl3 @b @a)

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
T26117.$trModule4 :: GHC.Internal.Prim.Addr#
[GblId,
 Unf=Unf{Src=<vanilla>, TopLvl=True,
         Value=True, ConLike=True, WorkFree=True, Expandable=True,
         Guidance=IF_ARGS [] 20 0}]
T26117.$trModule4 = "main"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
T26117.$trModule3 :: GHC.Internal.Types.TrName
[GblId,
 Unf=Unf{Src=<vanilla>, TopLvl=True,
         Value=True, ConLike=True, WorkFree=True, Expandable=True,
         Guidance=IF_ARGS [] 10 10}]
T26117.$trModule3 = GHC.Internal.Types.TrNameS T26117.$trModule4

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
T26117.$trModule2 :: GHC.Internal.Prim.Addr#
[GblId,
 Unf=Unf{Src=<vanilla>, TopLvl=True,
         Value=True, ConLike=True, WorkFree=True, Expandable=True,
         Guidance=IF_ARGS [] 30 0}]
T26117.$trModule2 = "T26117"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
T26117.$trModule1 :: GHC.Internal.Types.TrName
[GblId,
 Unf=Unf{Src=<vanilla>, TopLvl=True,
         Value=True, ConLike=True, WorkFree=True, Expandable=True,
         Guidance=IF_ARGS [] 10 10}]
T26117.$trModule1 = GHC.Internal.Types.TrNameS T26117.$trModule2

-- RHS size: {terms: 3, types: 0, coercions: 0, joins: 0/0}
T26117.$trModule :: GHC.Internal.Types.Module
[GblId,
 Unf=Unf{Src=<vanilla>, TopLvl=True,
         Value=True, ConLike=True, WorkFree=True, Expandable=True,
         Guidance=IF_ARGS [] 10 10}]
T26117.$trModule
  = GHC.Internal.Types.Module T26117.$trModule3 T26117.$trModule1

-- RHS size: {terms: 3, types: 0, coercions: 0, joins: 0/0}
$krep :: GHC.Internal.Types.KindRep
[GblId, Unf=OtherCon []]
$krep
  = GHC.Internal.Types.KindRepFun
      GHC.Internal.Types.krep$* GHC.Internal.Types.krep$Constraint

-- RHS size: {terms: 3, types: 0, coercions: 0, joins: 0/0}
T26117.$tcC1 [InlPrag=[~]] :: GHC.Internal.Types.KindRep
[GblId, Unf=OtherCon []]
T26117.$tcC1
  = GHC.Internal.Types.KindRepFun GHC.Internal.Types.krep$* $krep

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
$krep1 :: GHC.Internal.Types.KindRep
[GblId, Unf=OtherCon []]
$krep1 = GHC.Internal.Types.KindRepVar 1#

-- RHS size: {terms: 3, types: 0, coercions: 0, joins: 0/0}
$krep2 :: GHC.Internal.Types.KindRep
[GblId, Unf=OtherCon []]
$krep2 = GHC.Internal.Types.KindRepFun $krep1 $krep1

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
$krep3 :: GHC.Internal.Types.KindRep
[GblId, Unf=OtherCon []]
$krep3 = GHC.Internal.Types.KindRepVar 0#

-- RHS size: {terms: 3, types: 0, coercions: 0, joins: 0/0}
$krep4 :: GHC.Internal.Types.KindRep
[GblId, Unf=OtherCon []]
$krep4 = GHC.Internal.Types.KindRepFun $krep3 $krep2

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
T26117.$tcD2 :: GHC.Internal.Prim.Addr#
[GblId,
 Unf=Unf{Src=<vanilla>, TopLvl=True,
         Value=True, ConLike=True, WorkFree=True, Expandable=True,
         Guidance=IF_ARGS [] 20 0}]
T26117.$tcD2 = "D"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
T26117.$tcD1 :: GHC.Internal.Types.TrName
[GblId,
 Unf=Unf{Src=<vanilla>, TopLvl=True,
         Value=True, ConLike=True, WorkFree=True, Expandable=True,
         Guidance=IF_ARGS [] 10 10}]
T26117.$tcD1 = GHC.Internal.Types.TrNameS T26117.$tcD2

-- RHS size: {terms: 7, types: 0, coercions: 0, joins: 0/0}
T26117.$tcD :: GHC.Internal.Types.TyCon
[GblId,
 Unf=Unf{Src=<vanilla>, TopLvl=True,
         Value=True, ConLike=True, WorkFree=True, Expandable=True,
         Guidance=IF_ARGS [] 10 10}]
T26117.$tcD
  = GHC.Internal.Types.TyCon
      18427868686024955676#Word64
      4087453451394481638#Word64
      T26117.$trModule
      T26117.$tcD1
      0#
      T26117.$tcC1

-- RHS size: {terms: 3, types: 2, coercions: 0, joins: 0/0}
$krep5 :: [GHC.Internal.Types.KindRep]
[GblId, Unf=OtherCon []]
$krep5
  = GHC.Internal.Types.:
      @GHC.Internal.Types.KindRep
      $krep1
      (GHC.Internal.Types.[] @GHC.Internal.Types.KindRep)

-- RHS size: {terms: 3, types: 1, coercions: 0, joins: 0/0}
$krep6 :: [GHC.Internal.Types.KindRep]
[GblId, Unf=OtherCon []]
$krep6
  = GHC.Internal.Types.: @GHC.Internal.Types.KindRep $krep3 $krep5

-- RHS size: {terms: 3, types: 0, coercions: 0, joins: 0/0}
$krep7 :: GHC.Internal.Types.KindRep
[GblId, Unf=OtherCon []]
$krep7 = GHC.Internal.Types.KindRepTyConApp T26117.$tcD $krep6

-- RHS size: {terms: 3, types: 0, coercions: 0, joins: 0/0}
$krep8 :: GHC.Internal.Types.KindRep
[GblId, Unf=OtherCon []]
$krep8 = GHC.Internal.Types.KindRepFun $krep4 $krep7

-- RHS size: {terms: 3, types: 0, coercions: 0, joins: 0/0}
T26117.$tc'C:D1 [InlPrag=[~]] :: GHC.Internal.Types.KindRep
[GblId, Unf=OtherCon []]
T26117.$tc'C:D1 = GHC.Internal.Types.KindRepFun $krep4 $krep8

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
T26117.$tc'C:D3 :: GHC.Internal.Prim.Addr#
[GblId,
 Unf=Unf{Src=<vanilla>, TopLvl=True,
         Value=True, ConLike=True, WorkFree=True, Expandable=True,
         Guidance=IF_ARGS [] 20 0}]
T26117.$tc'C:D3 = "'C:D"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
T26117.$tc'C:D2 :: GHC.Internal.Types.TrName
[GblId,
 Unf=Unf{Src=<vanilla>, TopLvl=True,
         Value=True, ConLike=True, WorkFree=True, Expandable=True,
         Guidance=IF_ARGS [] 10 10}]
T26117.$tc'C:D2 = GHC.Internal.Types.TrNameS T26117.$tc'C:D3

-- RHS size: {terms: 7, types: 0, coercions: 0, joins: 0/0}
T26117.$tc'C:D :: GHC.Internal.Types.TyCon
[GblId,
 Unf=Unf{Src=<vanilla>, TopLvl=True,
         Value=True, ConLike=True, WorkFree=True, Expandable=True,
         Guidance=IF_ARGS [] 10 10}]
T26117.$tc'C:D
  = GHC.Internal.Types.TyCon
      14714477993590114477#Word64
      17388374250742016296#Word64
      T26117.$trModule
      T26117.$tc'C:D2
      2#
      T26117.$tc'C:D1

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
T26117.$tcC3 :: GHC.Internal.Prim.Addr#
[GblId,
 Unf=Unf{Src=<vanilla>, TopLvl=True,
         Value=True, ConLike=True, WorkFree=True, Expandable=True,
         Guidance=IF_ARGS [] 20 0}]
T26117.$tcC3 = "C"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
T26117.$tcC2 :: GHC.Internal.Types.TrName
[GblId,
 Unf=Unf{Src=<vanilla>, TopLvl=True,
         Value=True, ConLike=True, WorkFree=True, Expandable=True,
         Guidance=IF_ARGS [] 10 10}]
T26117.$tcC2 = GHC.Internal.Types.TrNameS T26117.$tcC3

-- RHS size: {terms: 7, types: 0, coercions: 0, joins: 0/0}
T26117.$tcC :: GHC.Internal.Types.TyCon
[GblId,
 Unf=Unf{Src=<vanilla>, TopLvl=True,
         Value=True, ConLike=True, WorkFree=True, Expandable=True,
         Guidance=IF_ARGS [] 10 10}]
T26117.$tcC
  = GHC.Internal.Types.TyCon
      6116531860557468422#Word64
      17953227584944457497#Word64
      T26117.$trModule
      T26117.$tcC2
      0#
      T26117.$tcC1


------ Local rules for imported ids --------
"USPEC $fCaList @Int @_"
    forall (@b) ($dD :: D Int b) ($dEq :: Eq (F Int)).
      T26117.$fCaList @Int @b $dEq $dD
      = T26117.$fCaList_$s$fCaList @b $dD


