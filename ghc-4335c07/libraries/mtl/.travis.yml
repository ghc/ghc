# This Travis job script has been generated by a script via
#
#   make_travis_yml_2.hs 'mtl.cabal' '--irc-channel=irc.freenode.org#haskell-lens'
#
# For more information, see https://github.com/hvr/multi-ghc-travis
#
language: c
sudo: false

git:
  submodules: false  # whether to recursively clone submodules

notifications:
  irc:
    channels:
      - "irc.freenode.org#haskell-lens"
    skip_join: true
    template:
      - "\x0313mtl\x03/\x0306%{branch}\x03 \x0314%{commit}\x03 %{build_url} %{message}"

cache:
  directories:
    - $HOME/.cabal/packages
    - $HOME/.cabal/store

before_cache:
  - rm -fv $HOME/.cabal/packages/hackage.haskell.org/build-reports.log
  # remove files that are regenerated by 'cabal update'
  - rm -fv $HOME/.cabal/packages/hackage.haskell.org/00-index.*
  - rm -fv $HOME/.cabal/packages/hackage.haskell.org/*.json
  - rm -fv $HOME/.cabal/packages/hackage.haskell.org/01-index.cache
  - rm -fv $HOME/.cabal/packages/hackage.haskell.org/01-index.tar
  - rm -fv $HOME/.cabal/packages/hackage.haskell.org/01-index.tar.idx

matrix:
  include:
    - compiler: "ghc-7.0.4"
    # env: TEST=--disable-tests BENCH=--disable-benchmarks
      addons: {apt: {packages: [ghc-ppa-tools,cabal-install-head,ghc-7.0.4], sources: [hvr-ghc]}}
    - compiler: "ghc-7.2.2"
    # env: TEST=--disable-tests BENCH=--disable-benchmarks
      addons: {apt: {packages: [ghc-ppa-tools,cabal-install-head,ghc-7.2.2], sources: [hvr-ghc]}}
    - compiler: "ghc-7.4.2"
    # env: TEST=--disable-tests BENCH=--disable-benchmarks
      addons: {apt: {packages: [ghc-ppa-tools,cabal-install-head,ghc-7.4.2], sources: [hvr-ghc]}}
    - compiler: "ghc-7.6.3"
    # env: TEST=--disable-tests BENCH=--disable-benchmarks
      env: HADDOCK=false
      addons: {apt: {packages: [ghc-ppa-tools,cabal-install-head,ghc-7.6.3], sources: [hvr-ghc]}}
    - compiler: "ghc-7.8.4"
    # env: TEST=--disable-tests BENCH=--disable-benchmarks
      addons: {apt: {packages: [ghc-ppa-tools,cabal-install-head,ghc-7.8.4], sources: [hvr-ghc]}}
    - compiler: "ghc-7.10.3"
    # env: TEST=--disable-tests BENCH=--disable-benchmarks
      addons: {apt: {packages: [ghc-ppa-tools,cabal-install-head,ghc-7.10.3], sources: [hvr-ghc]}}
    - compiler: "ghc-8.0.2"
    # env: TEST=--disable-tests BENCH=--disable-benchmarks
      addons: {apt: {packages: [ghc-ppa-tools,cabal-install-head,ghc-8.0.2], sources: [hvr-ghc]}}
    - compiler: "ghc-8.2.1"
    # env: TEST=--disable-tests BENCH=--disable-benchmarks
      addons: {apt: {packages: [ghc-ppa-tools,cabal-install-head,ghc-8.2.1], sources: [hvr-ghc]}}
    - compiler: "ghc-head"
    # env: TEST=--disable-tests BENCH=--disable-benchmarks
      addons: {apt: {packages: [ghc-ppa-tools,cabal-install-head,ghc-head], sources: [hvr-ghc]}}

  allow_failures:
    - compiler: "ghc-head"

before_install:
 - HC=${CC}
 - unset CC
 - PATH=/opt/ghc/bin:/opt/ghc-ppa-tools/bin:$PATH
 - PKGNAME='mtl'

install:
 - cabal --version
 - echo "$(${HC} --version) [$(${HC} --print-project-git-commit-id 2> /dev/null || echo '?')]"
 - BENCH=${BENCH---enable-benchmarks}
 - TEST=${TEST---enable-tests}
 - HADDOCK=${HADDOCK-true}
 - travis_retry cabal update -v
 - sed -i 's/^jobs:/-- jobs:/' ${HOME}/.cabal/config
 - rm -fv cabal.project.local
 - "echo 'packages: .' > cabal.project"
 - rm -f cabal.project.freeze
 - cabal new-build -w ${HC} ${TEST} ${BENCH} --dep -j2 all
 - cabal new-build -w ${HC} --disable-tests --disable-benchmarks --dep -j2 all

# Here starts the actual work to be performed for the package under test;
# any command which exits with a non-zero exit code causes the build to fail.
script:
 - if [ -f configure.ac ]; then autoreconf -i; fi
 - rm -rf .ghc.environment.* dist/
 - cabal sdist # test that a source-distribution can be generated
 - cd dist/
 - SRCTAR=(${PKGNAME}-*.tar.gz)
 - SRC_BASENAME="${SRCTAR/%.tar.gz}"
 - tar -xvf "./$SRC_BASENAME.tar.gz"
 - cd "$SRC_BASENAME/"
## from here on, CWD is inside the extracted source-tarball
 - rm -fv cabal.project.local
 - "echo 'packages: .' > cabal.project"
 # this builds all libraries and executables (without tests/benchmarks)
 - rm -f cabal.project.freeze
 - cabal new-build -w ${HC} --disable-tests --disable-benchmarks all
 # this builds all libraries and executables (including tests/benchmarks)
 # - rm -rf ./dist-newstyle

 # build & run tests
 - cabal new-build -w ${HC} ${TEST} ${BENCH} all
 #- if [ "x$TEST" = "x--enable-tests" ]; then cabal new-test -w ${HC} ${TEST} all; fi

 # haddock
 - rm -rf ./dist-newstyle
 - if $HADDOCK; then cabal new-haddock -w ${HC} --disable-tests --disable-benchmarks all; else echo "Skipping haddock generation";fi

# EOF
