
Typeable1.hs:22:5: error:
    • Couldn't match kind ‘* -> (* -> *) -> (* -> *) -> * -> *’
                     with ‘forall k. (* -> *) -> (k -> *) -> k -> *’
      Inaccessible code in
        a pattern with pattern synonym:
          App :: forall k2 (t :: k2).
                 () =>
                 forall k1 (a :: k1 -> k2) (b :: k1).
                 (t ~ a b) =>
                 TypeRep a -> TypeRep b -> TypeRep t,
        in a pattern binding in
             'do' block
    • In the pattern: App x y
      In a stmt of a 'do' block: App x y <- pure x
      In the expression:
        do let x :: ComposeK Maybe Maybe Int
               x = undefined
           App x y <- pure $ typeOf x
           print (x, y)
           App x y <- pure x
           ....
    • Relevant bindings include
        y :: TypeRep b2 (bound at Typeable1.hs:19:11)
        x :: TypeRep a2 (bound at Typeable1.hs:19:9)
