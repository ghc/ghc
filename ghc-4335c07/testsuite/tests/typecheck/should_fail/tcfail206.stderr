
tcfail206.hs:5:5: error:
    • Couldn't match type ‘Bool’ with ‘Int’
      Expected type: Bool -> (Int, Bool)
        Actual type: Int -> (Int, Bool)
    • In the expression: (, True)
      In an equation for ‘a’: a = (, True)

tcfail206.hs:8:5: error:
    • Couldn't match type ‘(Integer, Int)’ with ‘Bool -> (Int, Bool)’
      Expected type: Int -> Bool -> (Int, Bool)
        Actual type: Int -> (Integer, Int)
    • In the expression: (1,)
      In an equation for ‘b’: b = (1,)

tcfail206.hs:11:5: error:
    • Couldn't match type ‘a’ with ‘Bool’
      ‘a’ is a rigid type variable bound by
        the type signature for:
          c :: forall a. a -> (a, Bool)
        at tcfail206.hs:10:1-19
      Expected type: a -> (a, Bool)
        Actual type: Bool -> (a, Bool)
    • In the expression: (True || False,)
      In an equation for ‘c’: c = (True || False,)
    • Relevant bindings include
        c :: a -> (a, Bool) (bound at tcfail206.hs:11:1)

tcfail206.hs:14:5: error:
    • Couldn't match type ‘Bool’ with ‘Int’
      Expected type: Bool -> (# Int, Bool #)
        Actual type: Int -> (# Int, Bool #)
    • In the expression: (# , True #)
      In an equation for ‘d’: d = (# , True #)

tcfail206.hs:17:5: error:
    • Couldn't match type ‘(# Integer, Int #)’
                     with ‘Bool -> (# Int, Bool #)’
      Expected type: Int -> Bool -> (# Int, Bool #)
        Actual type: Int -> (# Integer, Int #)
    • In the expression: (# 1, #)
      In an equation for ‘e’: e = (# 1, #)

tcfail206.hs:20:5: error:
    • Couldn't match type ‘a’ with ‘Bool’
      ‘a’ is a rigid type variable bound by
        the type signature for:
          f :: forall a. a -> (# a, Bool #)
        at tcfail206.hs:19:1-21
      Expected type: a -> (# a, Bool #)
        Actual type: Bool -> (# a, Bool #)
    • In the expression: (# True || False, #)
      In an equation for ‘f’: f = (# True || False, #)
    • Relevant bindings include
        f :: a -> (# a, Bool #) (bound at tcfail206.hs:20:1)
