
tcfail140.hs:10:7: error:
    • Couldn't match expected type ‘Integer -> t’
                  with actual type ‘Int’
    • The function ‘f’ is applied to two arguments,
      but its type ‘Int -> Int’ has only one
      In the expression: f 3 9
      In an equation for ‘bar’: bar = f 3 9
    • Relevant bindings include bar :: t (bound at tcfail140.hs:10:1)

tcfail140.hs:12:10: error:
    • Couldn't match expected type ‘Integer -> t’
                  with actual type ‘Int’
    • The operator ‘f’ takes two arguments,
      but its type ‘Int -> Int’ has only one
      In the expression: 3 `f` 4
      In an equation for ‘rot’: rot xs = 3 `f` 4
    • Relevant bindings include
        rot :: p -> t (bound at tcfail140.hs:12:1)

tcfail140.hs:14:15: error:
    • Couldn't match expected type ‘t -> b’ with actual type ‘Int’
    • The operator ‘f’ takes two arguments,
      but its type ‘Int -> Int’ has only one
      In the first argument of ‘map’, namely ‘(3 `f`)’
      In the expression: map (3 `f`) xs
    • Relevant bindings include
        xs :: [t] (bound at tcfail140.hs:14:5)
        bot :: [t] -> [b] (bound at tcfail140.hs:14:1)

tcfail140.hs:16:8: error:
    • The constructor ‘Just’ should have 1 argument, but has been given none
    • In the pattern: Just
      The lambda expression ‘\ Just x -> x’ has two arguments,
      but its type ‘Maybe a -> a’ has only one
      In the expression: (\ Just x -> x) :: Maybe a -> a

tcfail140.hs:19:1: error:
    • Couldn't match expected type ‘Int’ with actual type ‘p0 -> Bool’
    • The equation(s) for ‘g’ have two arguments,
      but its type ‘Int -> Int’ has only one
