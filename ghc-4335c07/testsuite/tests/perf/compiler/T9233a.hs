module T9233a where


data X = X {
  f1 :: String,
  f2 :: !Bool,
  f3 :: !Bool,
  f4 :: !Bool,
  f5 :: !Bool,
  f6 :: !Bool,
  f7 :: !Bool,
  f8 :: !Bool,
  f9 :: !Bool,
  f10 :: !Bool,
  f11 :: !Bool,
  f12 :: !Bool,
  f13 :: !Bool,
  f14 :: !Bool,
  f15 :: !Bool,
  f16 :: !Bool,
  f17 :: !Bool,
  f18 :: !Bool,
  f19 :: !Bool,
  f20 :: !Bool,
  f21 :: !Bool,
  f22 :: !Bool,
  f23 :: !Bool,
  f24 :: !Bool,
  f25 :: !Bool,
  f26 :: !Bool,
  f27 :: !Bool,
  f28 :: !Bool,
  f29 :: !Bool,
  f30 :: !Bool,
  f31 :: !Bool,
  f32 :: !Bool,
  f33 :: !Bool,
  f34 :: !Bool,
  f35 :: !Bool,
  f36 :: !Bool,
  f37 :: !Bool,
  f38 :: !Bool,
  f39 :: !Bool,
  f40 :: !Bool,
  f41 :: !Bool,
  f42 :: !Bool,
  f43 :: !Bool,
  f44 :: !Bool,
  f45 :: !Bool,
  f46 :: !Bool,
  f47 :: !Bool,
  f48 :: !Bool,
  f49 :: !Bool,
  f50 :: !Bool,
  f51 :: !Bool,
  f52 :: !Bool,
  f53 :: !Bool,
  f54 :: !Bool,
  f55 :: !Bool,
  f56 :: !Bool,
  f57 :: !Bool,
  f58 :: !Bool,
  f59 :: !Bool,
  f60 :: !Bool,
  f61 :: !Bool,
  f62 :: !Bool,
  f63 :: !Bool,
  f64 :: !Bool,
  f65 :: !Bool,
  f66 :: !Bool,
  f67 :: !Bool,
  f68 :: !Bool,
  f69 :: !Bool,
  f70 :: !Bool,
  f71 :: !Bool,
  f72 :: !Bool,
  f73 :: !Bool,
  f74 :: !Bool,
  f75 :: !Bool,
  f76 :: !Bool,
  f77 :: !Bool,
  f78 :: !Bool,
  f79 :: !Bool,
  f80 :: !Bool,
  f81 :: !Bool,
  f82 :: !Bool,
  f83 :: !Bool,
  f84 :: !Bool,
  f85 :: !Bool,
  f86 :: !Bool,
  f87 :: !Bool,
  f88 :: !Bool,
  f89 :: !Bool,
  f90 :: !Bool,
  f91 :: !Bool,
  f92 :: !Bool,
  f93 :: !Bool,
  f94 :: !Bool,
  f95 :: !Bool,
  f96 :: !Bool,
  f97 :: !Bool,
  f98 :: !Bool,
  f99 :: !Bool,
  f100 :: !Bool
  }

data Options = Options {
  flags :: !X,
  o2 :: !Bool,
  o3 :: !Bool,
  o4 :: !Bool,
  o5 :: !Bool,
  o6 :: !Bool,
  o7 :: !Bool,
  o8 :: !Bool,
  o9 :: !Bool,
  o10 :: !Bool,
  o11 :: !Bool,
  o12 :: !Bool
  }

splitComma :: String -> String
splitComma _ = "a"
{-# NOINLINE splitComma #-}

getOpt :: Monad m => [String -> Options -> m Options] -> m ()
getOpt _ = return ()
{-# NOINLINE getOpt #-}
