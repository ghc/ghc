type family A a b :: * 	-- Defined at T4175.hs:7:1
type instance A (Maybe a) a = a 	-- Defined at T4175.hs:9:15
type instance A Int Int = () 	-- Defined at T4175.hs:8:15
type instance A (B a) b = () 	-- Defined at T4175.hs:10:15
data family B a 	-- Defined at T4175.hs:12:1
instance G B -- Defined at T4175.hs:34:10
type instance A (B a) b = () 	-- Defined at T4175.hs:10:15
data instance B () = MkB 	-- Defined at T4175.hs:13:15
class C a where
  type family D a b :: *
  	-- Defined at T4175.hs:16:5
type instance D () () = Bool 	-- Defined at T4175.hs:22:10
type instance D Int () = String 	-- Defined at T4175.hs:19:10
type family E a :: *
  where
      E () = Bool
      E Int = String
  	-- Defined at T4175.hs:24:1
data () = () 	-- Defined in ‘GHC.Tuple’
instance C () -- Defined at T4175.hs:21:10
instance Eq () -- Defined in ‘GHC.Classes’
instance Monoid () -- Defined in ‘GHC.Base’
instance Ord () -- Defined in ‘GHC.Classes’
instance Semigroup () -- Defined in ‘GHC.Base’
instance Show () -- Defined in ‘GHC.Show’
instance Read () -- Defined in ‘GHC.Read’
instance Enum () -- Defined in ‘GHC.Enum’
instance Bounded () -- Defined in ‘GHC.Enum’
type instance D () () = Bool 	-- Defined at T4175.hs:22:10
type instance D Int () = String 	-- Defined at T4175.hs:19:10
data instance B () = MkB 	-- Defined at T4175.hs:13:15
data Maybe a = Nothing | Just a 	-- Defined in ‘GHC.Base’
instance Applicative Maybe -- Defined in ‘GHC.Base’
instance Eq a => Eq (Maybe a) -- Defined in ‘GHC.Base’
instance Functor Maybe -- Defined in ‘GHC.Base’
instance Monad Maybe -- Defined in ‘GHC.Base’
instance Semigroup a => Monoid (Maybe a) -- Defined in ‘GHC.Base’
instance Ord a => Ord (Maybe a) -- Defined in ‘GHC.Base’
instance Semigroup a => Semigroup (Maybe a)
  -- Defined in ‘GHC.Base’
instance Show a => Show (Maybe a) -- Defined in ‘GHC.Show’
instance Read a => Read (Maybe a) -- Defined in ‘GHC.Read’
instance Foldable Maybe -- Defined in ‘Data.Foldable’
instance Traversable Maybe -- Defined in ‘Data.Traversable’
type instance A (Maybe a) a = a 	-- Defined at T4175.hs:9:15
data Int = I# Int# 	-- Defined in ‘GHC.Types’
instance C Int -- Defined at T4175.hs:18:10
instance Eq Int -- Defined in ‘GHC.Classes’
instance Ord Int -- Defined in ‘GHC.Classes’
instance Show Int -- Defined in ‘GHC.Show’
instance Read Int -- Defined in ‘GHC.Read’
instance Enum Int -- Defined in ‘GHC.Enum’
instance Num Int -- Defined in ‘GHC.Num’
instance Real Int -- Defined in ‘GHC.Real’
instance Bounded Int -- Defined in ‘GHC.Enum’
instance Integral Int -- Defined in ‘GHC.Real’
type instance D Int () = String 	-- Defined at T4175.hs:19:10
type instance A Int Int = () 	-- Defined at T4175.hs:8:15
class Z a 	-- Defined at T4175.hs:28:1
instance F (Z a) -- Defined at T4175.hs:31:10
