
==================== Derived instances ====================
Derived class instances:
  instance GHC.Read.Read (DrvEmptyData.Void a) where
    GHC.Read.readPrec = Text.ParserCombinators.ReadPrec.pfail
    GHC.Read.readList = GHC.Read.readListDefault
    GHC.Read.readListPrec = GHC.Read.readListPrecDefault
  
  instance GHC.Show.Show (DrvEmptyData.Void a) where
    GHC.Show.showsPrec z = case z of
  
  instance GHC.Classes.Ord (DrvEmptyData.Void a) where
    GHC.Classes.compare _ z = GHC.Types.EQ
  
  instance GHC.Classes.Eq (DrvEmptyData.Void a) where
    (GHC.Classes.==) _ z = GHC.Types.True
  
  instance Data.Data.Data a =>
           Data.Data.Data (DrvEmptyData.Void a) where
    Data.Data.gfoldl _ _ z = case z of
    Data.Data.gunfold k z c = case Data.Data.constrIndex c of
    Data.Data.toConstr z = case z of
    Data.Data.dataTypeOf _ = DrvEmptyData.$tVoid
    Data.Data.dataCast1 f = Data.Typeable.gcast1 f
  
  instance GHC.Base.Functor DrvEmptyData.Void where
    GHC.Base.fmap _ z = case z of
    (GHC.Base.<$) _ z = case z of
  
  instance Data.Foldable.Foldable DrvEmptyData.Void where
    Data.Foldable.foldMap _ z = GHC.Base.mempty
  
  instance Data.Traversable.Traversable DrvEmptyData.Void where
    Data.Traversable.traverse _ z = GHC.Base.pure (case z of)
  
  instance GHC.Generics.Generic (DrvEmptyData.Void a) where
    GHC.Generics.from x
      = GHC.Generics.M1 (case x of { x -> case x of })
    GHC.Generics.to (GHC.Generics.M1 x) = case x of { x -> case x of }
  
  instance GHC.Generics.Generic1 DrvEmptyData.Void where
    GHC.Generics.from1 x
      = GHC.Generics.M1 (case x of { x -> case x of })
    GHC.Generics.to1 (GHC.Generics.M1 x) = case x of { x -> case x of }
  
  instance Language.Haskell.TH.Syntax.Lift
             (DrvEmptyData.Void a) where
    Language.Haskell.TH.Syntax.lift z = GHC.Base.pure (case z of)
  
  DrvEmptyData.$tVoid :: Data.Data.DataType
  DrvEmptyData.$tVoid = Data.Data.mkDataType "Void" []

Derived type family instances:
  type GHC.Generics.Rep (DrvEmptyData.Void a) = GHC.Generics.D1
                                                  ('GHC.Generics.MetaData
                                                     "Void" "DrvEmptyData" "main" 'GHC.Types.False)
                                                  GHC.Generics.V1
  type GHC.Generics.Rep1 DrvEmptyData.Void = GHC.Generics.D1
                                               ('GHC.Generics.MetaData
                                                  "Void" "DrvEmptyData" "main" 'GHC.Types.False)
                                               GHC.Generics.V1



==================== Filling in method body ====================
GHC.Read.Read [DrvEmptyData.Void a[ssk:2]]
  GHC.Read.readsPrec = GHC.Read.$dmreadsPrec
                         @(DrvEmptyData.Void a[ssk:2])



==================== Filling in method body ====================
GHC.Show.Show [DrvEmptyData.Void a[ssk:2]]
  GHC.Show.show = GHC.Show.$dmshow @(DrvEmptyData.Void a[ssk:2])



==================== Filling in method body ====================
GHC.Show.Show [DrvEmptyData.Void a[ssk:2]]
  GHC.Show.showList = GHC.Show.$dmshowList
                        @(DrvEmptyData.Void a[ssk:2])



==================== Filling in method body ====================
GHC.Classes.Ord [DrvEmptyData.Void a[ssk:2]]
  GHC.Classes.< = GHC.Classes.$dm< @(DrvEmptyData.Void a[ssk:2])



==================== Filling in method body ====================
GHC.Classes.Ord [DrvEmptyData.Void a[ssk:2]]
  GHC.Classes.<= = GHC.Classes.$dm<= @(DrvEmptyData.Void a[ssk:2])



==================== Filling in method body ====================
GHC.Classes.Ord [DrvEmptyData.Void a[ssk:2]]
  GHC.Classes.> = GHC.Classes.$dm> @(DrvEmptyData.Void a[ssk:2])



==================== Filling in method body ====================
GHC.Classes.Ord [DrvEmptyData.Void a[ssk:2]]
  GHC.Classes.>= = GHC.Classes.$dm>= @(DrvEmptyData.Void a[ssk:2])



==================== Filling in method body ====================
GHC.Classes.Ord [DrvEmptyData.Void a[ssk:2]]
  GHC.Classes.max = GHC.Classes.$dmmax @(DrvEmptyData.Void a[ssk:2])



==================== Filling in method body ====================
GHC.Classes.Ord [DrvEmptyData.Void a[ssk:2]]
  GHC.Classes.min = GHC.Classes.$dmmin @(DrvEmptyData.Void a[ssk:2])



==================== Filling in method body ====================
GHC.Classes.Eq [DrvEmptyData.Void a[ssk:2]]
  GHC.Classes./= = GHC.Classes.$dm/= @(DrvEmptyData.Void a[ssk:2])



==================== Filling in method body ====================
Data.Data.Data [DrvEmptyData.Void a[ssk:2]]
  Data.Data.dataCast2 = Data.Data.$dmdataCast2
                          @(DrvEmptyData.Void a[ssk:2])



==================== Filling in method body ====================
Data.Data.Data [DrvEmptyData.Void a[ssk:2]]
  Data.Data.gmapT = Data.Data.$dmgmapT @(DrvEmptyData.Void a[ssk:2])



==================== Filling in method body ====================
Data.Data.Data [DrvEmptyData.Void a[ssk:2]]
  Data.Data.gmapQl = Data.Data.$dmgmapQl
                       @(DrvEmptyData.Void a[ssk:2])



==================== Filling in method body ====================
Data.Data.Data [DrvEmptyData.Void a[ssk:2]]
  Data.Data.gmapQr = Data.Data.$dmgmapQr
                       @(DrvEmptyData.Void a[ssk:2])



==================== Filling in method body ====================
Data.Data.Data [DrvEmptyData.Void a[ssk:2]]
  Data.Data.gmapQ = Data.Data.$dmgmapQ @(DrvEmptyData.Void a[ssk:2])



==================== Filling in method body ====================
Data.Data.Data [DrvEmptyData.Void a[ssk:2]]
  Data.Data.gmapQi = Data.Data.$dmgmapQi
                       @(DrvEmptyData.Void a[ssk:2])



==================== Filling in method body ====================
Data.Data.Data [DrvEmptyData.Void a[ssk:2]]
  Data.Data.gmapM = Data.Data.$dmgmapM @(DrvEmptyData.Void a[ssk:2])



==================== Filling in method body ====================
Data.Data.Data [DrvEmptyData.Void a[ssk:2]]
  Data.Data.gmapMp = Data.Data.$dmgmapMp
                       @(DrvEmptyData.Void a[ssk:2])



==================== Filling in method body ====================
Data.Data.Data [DrvEmptyData.Void a[ssk:2]]
  Data.Data.gmapMo = Data.Data.$dmgmapMo
                       @(DrvEmptyData.Void a[ssk:2])



==================== Filling in method body ====================
Data.Foldable.Foldable [DrvEmptyData.Void]
  Data.Foldable.fold = Data.Foldable.$dmfold @(DrvEmptyData.Void)



==================== Filling in method body ====================
Data.Foldable.Foldable [DrvEmptyData.Void]
  Data.Foldable.foldr = Data.Foldable.$dmfoldr @(DrvEmptyData.Void)



==================== Filling in method body ====================
Data.Foldable.Foldable [DrvEmptyData.Void]
  Data.Foldable.foldr' = Data.Foldable.$dmfoldr' @(DrvEmptyData.Void)



==================== Filling in method body ====================
Data.Foldable.Foldable [DrvEmptyData.Void]
  Data.Foldable.foldl = Data.Foldable.$dmfoldl @(DrvEmptyData.Void)



==================== Filling in method body ====================
Data.Foldable.Foldable [DrvEmptyData.Void]
  Data.Foldable.foldl' = Data.Foldable.$dmfoldl' @(DrvEmptyData.Void)



==================== Filling in method body ====================
Data.Foldable.Foldable [DrvEmptyData.Void]
  Data.Foldable.foldr1 = Data.Foldable.$dmfoldr1 @(DrvEmptyData.Void)



==================== Filling in method body ====================
Data.Foldable.Foldable [DrvEmptyData.Void]
  Data.Foldable.foldl1 = Data.Foldable.$dmfoldl1 @(DrvEmptyData.Void)



==================== Filling in method body ====================
Data.Foldable.Foldable [DrvEmptyData.Void]
  Data.Foldable.toList = Data.Foldable.$dmtoList @(DrvEmptyData.Void)



==================== Filling in method body ====================
Data.Foldable.Foldable [DrvEmptyData.Void]
  Data.Foldable.null = Data.Foldable.$dmnull @(DrvEmptyData.Void)



==================== Filling in method body ====================
Data.Foldable.Foldable [DrvEmptyData.Void]
  Data.Foldable.length = Data.Foldable.$dmlength @(DrvEmptyData.Void)



==================== Filling in method body ====================
Data.Foldable.Foldable [DrvEmptyData.Void]
  Data.Foldable.elem = Data.Foldable.$dmelem @(DrvEmptyData.Void)



==================== Filling in method body ====================
Data.Foldable.Foldable [DrvEmptyData.Void]
  Data.Foldable.maximum = Data.Foldable.$dmmaximum
                            @(DrvEmptyData.Void)



==================== Filling in method body ====================
Data.Foldable.Foldable [DrvEmptyData.Void]
  Data.Foldable.minimum = Data.Foldable.$dmminimum
                            @(DrvEmptyData.Void)



==================== Filling in method body ====================
Data.Foldable.Foldable [DrvEmptyData.Void]
  Data.Foldable.sum = Data.Foldable.$dmsum @(DrvEmptyData.Void)



==================== Filling in method body ====================
Data.Foldable.Foldable [DrvEmptyData.Void]
  Data.Foldable.product = Data.Foldable.$dmproduct
                            @(DrvEmptyData.Void)



==================== Filling in method body ====================
Data.Traversable.Traversable [DrvEmptyData.Void]
  Data.Traversable.sequenceA = Data.Traversable.$dmsequenceA
                                 @(DrvEmptyData.Void)



==================== Filling in method body ====================
Data.Traversable.Traversable [DrvEmptyData.Void]
  Data.Traversable.mapM = Data.Traversable.$dmmapM
                            @(DrvEmptyData.Void)



==================== Filling in method body ====================
Data.Traversable.Traversable [DrvEmptyData.Void]
  Data.Traversable.sequence = Data.Traversable.$dmsequence
                                @(DrvEmptyData.Void)


