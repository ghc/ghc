
PushedInAsGivens.hs:10:31: error:
    • Couldn't match expected type ‘a1’ with actual type ‘a’
        because type variable ‘a1’ would escape its scope
      This (rigid, skolem) type variable is bound by
        the type signature for:
          foo :: forall a1. (F Int ~ [a1]) => a1 -> Int
        at PushedInAsGivens.hs:9:13-44
    • In the expression: y
      In the first argument of ‘length’, namely ‘[x, y]’
      In the expression: length [x, y]
    • Relevant bindings include
        x :: a1 (bound at PushedInAsGivens.hs:10:17)
        foo :: a1 -> Int (bound at PushedInAsGivens.hs:10:13)
        y :: a (bound at PushedInAsGivens.hs:9:5)
        bar :: a -> (a, Int) (bound at PushedInAsGivens.hs:9:1)

PushedInAsGivens.hs:11:15: error:
    • Couldn't match type ‘F Int’ with ‘[a]’
        arising from a use of ‘foo’
    • In the expression: foo y
      In the expression: (y, foo y)
      In the expression:
        let
          foo :: (F Int ~ [a]) => a -> Int
          foo x = length [...]
        in (y, foo y)
    • Relevant bindings include
        y :: a (bound at PushedInAsGivens.hs:9:5)
        bar :: a -> (a, Int) (bound at PushedInAsGivens.hs:9:1)
