TYPE SIGNATURES
  Foo.L :: forall a. [a] -> ListColl a
  empty :: forall c. Coll c => c
  emptyL :: forall a. ListColl a
  insert :: forall c. Coll c => Elem c -> c -> c
  test2 ::
    forall c a b. (Coll c, Num a, Num b, Elem c ~ (a, b)) => c -> c
TYPE CONSTRUCTORS
  class Coll c where
    type family Elem c :: * open
    empty :: c
    insert :: Elem c -> c -> c
    {-# MINIMAL empty, insert #-}
  data ListColl a = L [a]
COERCION AXIOMS
  axiom Foo.D:R:ElemListColl ::
    Elem (ListColl a) = a -- Defined at T3017.hs:13:9
INSTANCES
  instance Coll (ListColl a) -- Defined at T3017.hs:12:11
FAMILY INSTANCES
  type Elem (ListColl a)
Dependent modules: []
Dependent packages: [base-4.11.0.0, ghc-prim-0.5.2.0,
                     integer-gmp-1.0.1.0]
