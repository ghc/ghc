T14681.hs:8:2-32: Splicing declarations
    [d| f = \ (Identity x) -> x |] ======> f = \ (Identity x) -> x
T14681.hs:(9,2)-(10,63): Splicing declarations
    [d| g = $(pure
                $ VarE '(+) `AppE` LitE (IntegerL (- 1))
                    `AppE` (LitE (IntegerL (- 1)))) |]
  ======>
    g = (+) (-1) (-1)
T14681.hs:(11,2)-(12,66): Splicing declarations
    [d| h _
          = $(pure
                $ VarE '(+#) `AppE` LitE (IntPrimL (- 1))
                    `AppE` (LitE (IntPrimL (- 1)))) |]
  ======>
    h _ = (+#) -1# -1#
