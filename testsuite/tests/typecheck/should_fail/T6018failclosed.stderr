
T6018failclosed.hs:11:5: error:
    • Type family equation violates injectivity annotation.
      RHS of injective type family equation cannot be a type family:
        IdProxyClosed a = IdClosed a -- Defined at T6018failclosed.hs:11:5
    • In the equations for closed type family ‘IdProxyClosed’
      In the type family declaration for ‘IdProxyClosed’

T6018failclosed.hs:19:5: error:
    • Type family equation violates injectivity annotation.
      RHS of injective type family equation is a bare type variable
      but these LHS type and kind patterns are not bare variables: ‘'Z’
        PClosed 'Z m = m -- Defined at T6018failclosed.hs:19:5
    • In the equations for closed type family ‘PClosed’
      In the type family declaration for ‘PClosed’

T6018failclosed.hs:19:5: error:
    • Type family equations violate injectivity annotation:
        PClosed 'Z m = m -- Defined at T6018failclosed.hs:19:5
        PClosed ('S n) m = 'S (PClosed n m)
          -- Defined at T6018failclosed.hs:20:5
    • In the equations for closed type family ‘PClosed’
      In the type family declaration for ‘PClosed’

T6018failclosed.hs:25:5: error:
    • Type family equation violates injectivity annotation.
      Type and kind variables ‘k1’, ‘b’
      cannot be inferred from the right-hand side.
      In the type family equation:
        forall k1 k2 (b :: k1) (c :: k2).
          JClosed @{k1} @{k2} Int b c = Char
            -- Defined at T6018failclosed.hs:25:5
    • In the equations for closed type family ‘JClosed’
      In the type family declaration for ‘JClosed’

T6018failclosed.hs:30:5: error:
    • Type family equation violates injectivity annotation.
      Type variable ‘n’ cannot be inferred from the right-hand side.
      In the type family equation:
        KClosed ('S n) m = 'S m -- Defined at T6018failclosed.hs:30:5
    • In the equations for closed type family ‘KClosed’
      In the type family declaration for ‘KClosed’

T6018failclosed.hs:35:5: error:
    • Type family equation violates injectivity annotation.
      RHS of injective type family equation cannot be a type family:
        forall k (a :: k).
          LClosed a = MaybeSynClosed a -- Defined at T6018failclosed.hs:35:5
    • In the equations for closed type family ‘LClosed’
      In the type family declaration for ‘LClosed’

T6018failclosed.hs:39:5: error:
    • Type family equations violate injectivity annotation:
        FClosed Char Bool Int = Int -- Defined at T6018failclosed.hs:39:5
        FClosed Bool Int Char = Int -- Defined at T6018failclosed.hs:40:5
    • In the equations for closed type family ‘FClosed’
      In the type family declaration for ‘FClosed’

T6018failclosed.hs:43:5: error:
    • Type family equations violate injectivity annotation:
        IClosed Int Char Bool = Bool -- Defined at T6018failclosed.hs:43:5
        IClosed Int Int Int = Bool -- Defined at T6018failclosed.hs:44:5
    • In the equations for closed type family ‘IClosed’
      In the type family declaration for ‘IClosed’

T6018failclosed.hs:49:3: error:
    • Type family equations violate injectivity annotation:
        E2 'True = 'False -- Defined at T6018failclosed.hs:49:3
        E2 a = 'False -- Defined at T6018failclosed.hs:50:3
    • In the equations for closed type family ‘E2’
      In the type family declaration for ‘E2’

T6018failclosed.hs:50:3: error:
    • Type family equation violates injectivity annotation.
      Type variable ‘a’ cannot be inferred from the right-hand side.
      In the type family equation:
        E2 a = 'False -- Defined at T6018failclosed.hs:50:3
    • In the equations for closed type family ‘E2’
      In the type family declaration for ‘E2’

T6018failclosed.hs:61:3: error:
    • Type family equations violate injectivity annotation:
        F a IO = IO a -- Defined at T6018failclosed.hs:61:3
        F Char b = b Int -- Defined at T6018failclosed.hs:62:3
    • In the equations for closed type family ‘F’
      In the type family declaration for ‘F’

T6018failclosed.hs:66:5: error:
    • Type family equation violates injectivity annotation.
      Kind variable ‘k’ cannot be inferred from the right-hand side.
      In the type family equation:
        forall k (a :: k) (b :: k).
          Gc @k a b = Int -- Defined at T6018failclosed.hs:66:5
    • In the equations for closed type family ‘Gc’
      In the type family declaration for ‘Gc’
