Broken note references (target note not found!):
ref    compiler/GHC/Core/Coercion/Axiom.hs:488:2:     Note [RoughMap and rm_empty]
ref    compiler/GHC/Core/Opt/OccurAnal.hs:1149:7:     Note [Loop breaking]
ref    compiler/GHC/Core/Opt/SetLevels.hs:1730:30:     Note [Top level scope]
ref    compiler/GHC/Core/Opt/Simplify/Iteration.hs:2560:55:     Note [Plan (AFTER)]
ref    compiler/GHC/Core/Opt/Simplify/Iteration.hs:2991:13:     Note [Case binder next]
ref    compiler/GHC/Core/Opt/Simplify/Iteration.hs:4351:8:     Note [Lambda-bound unfoldings]
ref    compiler/GHC/Core/Opt/Simplify/Utils.hs:1444:37:     Note [Gentle mode]
ref    compiler/GHC/Core/Opt/Specialise.hs:1760:29:     Note [Arity decrease]
ref    compiler/GHC/Core/TyCo/Rep.hs:1771:31:     Note [What prevents a constraint from floating]
ref    compiler/GHC/Driver/DynFlags.hs:1222:52:     Note [Eta-reduction in -O0]
ref    compiler/GHC/Driver/Main.hs:1888:34:     Note [simpleTidyPgm - mkBootModDetailsTc]
ref    compiler/GHC/Hs/Expr.hs:190:63:     Note [Pending Splices]
ref    compiler/GHC/Hs/Expr.hs:2254:87:     Note [Lifecycle of a splice]
ref    compiler/GHC/Hs/Expr.hs:2309:7:     Note [Pending Splices]
ref    compiler/GHC/Hs/Extension.hs:151:5:     Note [Strict argument type constraints]
ref    compiler/GHC/Hs/Pat.hs:152:74:     Note [Lifecycle of a splice]
ref    compiler/GHC/HsToCore/Pmc/Solver.hs:860:20:     Note [COMPLETE sets on data families]
ref    compiler/GHC/HsToCore/Quote.hs:1539:7:     Note [How brackets and nested splices are handled]
ref    compiler/GHC/Parser/Lexer.x:2560:15:     Note [CPP in GHC]
ref    compiler/GHC/Stg/Unarise.hs:456:32:     Note [Renaming during unarisation]
ref    compiler/GHC/Tc/Gen/HsType.hs:564:56:     Note [Skolem escape prevention]
ref    compiler/GHC/Tc/Gen/HsType.hs:2727:7:     Note [Matching a kind signature with a declaration]
ref    compiler/GHC/Tc/Gen/Pat.hs:284:20:     Note [Typing patterns in pattern bindings]
ref    compiler/GHC/Tc/Gen/Pat.hs:1390:7:     Note [Matching polytyped patterns]
ref    compiler/GHC/Tc/Gen/Sig.hs:91:10:     Note [Overview of type signatures]
ref    compiler/GHC/Tc/Gen/Splice.hs:373:16:     Note [How brackets and nested splices are handled]
ref    compiler/GHC/Tc/Gen/Splice.hs:561:35:     Note [Pending Splices]
ref    compiler/GHC/Tc/Gen/Splice.hs:688:7:     Note [How brackets and nested splices are handled]
ref    compiler/GHC/Tc/Instance/Family.hs:449:35:     Note [Constrained family instances]
ref    compiler/GHC/Tc/Solver/Rewrite.hs:1020:7:     Note [Stability of rewriting]
ref    compiler/GHC/Tc/TyCl.hs:1662:6:     Note [Unification variables need fresh Names]
ref    compiler/GHC/Tc/Types/Constraint.hs:211:9:     Note [NonCanonical Semantics]
ref    compiler/GHC/Types/Demand.hs:304:25:     Note [Preserving Boxity of results is rarely a win]
ref    compiler/GHC/Unit/Module/Deps.hs:97:13:     Note [Structure of dep_boot_mods]
ref    compiler/GHC/Utils/Monad.hs:415:34:     Note [multiShotIO]
ref    compiler/Language/Haskell/Syntax/Binds.hs:206:31:     Note [fun_id in Match]
ref    configure.ac:200:10:     Note [Linking ghc-bin against threaded stage0 RTS]
ref    docs/core-spec/core-spec.mng:177:6:     Note [TyBinders]
ref    hadrian/src/Expression.hs:145:30:     Note [Linking ghc-bin against threaded stage0 RTS]
ref    linters/lint-notes/Notes.hs:32:29:     Note [" <> T.unpack x <> "]
ref    linters/lint-notes/Notes.hs:69:22:     Note [...]
ref    testsuite/tests/indexed-types/should_fail/ExtraTcsUntch.hs:30:27:     Note [Extra TcS Untouchables]
ref    testsuite/tests/perf/should_run/all.T:8:6:     Note [Solving from instances when interacting Dicts]
ref    testsuite/tests/polykinds/CuskFam.hs:16:11:     Note [Unifying implicit CUSK variables]
ref    testsuite/tests/simplCore/should_compile/T5776.hs:16:7:     Note [Simplifying RULE lhs constraints]
ref    testsuite/tests/simplCore/should_compile/simpl018.hs:3:7:     Note [Float coercions]
ref    testsuite/tests/typecheck/should_compile/T9117.hs:3:12:     Note [Order of Coercible Instances]
ref    testsuite/tests/typecheck/should_compile/tc200.hs:5:7:     Note [Multiple instantiation]
ref    testsuite/tests/typecheck/should_compile/tc228.hs:9:7:     Note [Inference and implication constraints]
ref    testsuite/tests/typecheck/should_compile/tc231.hs:12:16:     Note [Important subtlety in oclose]
ref    testsuite/tests/typecheck/should_fail/UnliftedNewtypesMultiFieldGadt.hs:11:28:     Note [Kind-checking the field type]
ref    testsuite/tests/typecheck/should_fail/tcfail093.hs:13:7:     Note [Important subtlety in oclose]
ref    utils/haddock/haddock-api/src/Haddock/Convert.hs:1108:13:     Note [Eta reduction for data family axioms]
ref    utils/haddock/haddock-api/src/Haddock/Convert.hs:1125:0:     Note [Invariant: Never expand type synonyms]
ref    utils/haddock/haddock-api/src/Haddock/Convert.hs:1141:7:     Note [Invariant: Never expand type synonyms]
ref    utils/haddock/haddock-api/src/Haddock/Convert.hs:1148:9:     Note [Invariant: Never expand type synonyms]
ref    utils/haddock/haddock-api/src/Haddock/Convert.hs:1157:9:     Note [Invariant: Never expand type synonyms]
ref    utils/haddock/haddock-api/src/Haddock/Convert.hs:1171:9:     Note [Invariant: Never expand type synonyms]
ref    utils/haddock/haddock-api/src/Haddock/Convert.hs:1185:9:     Note [Invariant: Never expand type synonyms]
ref    utils/haddock/haddock-api/src/Haddock/Convert.hs:1187:9:     Note [Invariant: Never expand type synonyms]
ref    utils/haddock/haddock-api/src/Haddock/Convert.hs:1196:9:     Note [Invariant: Never expand type synonyms]
ref    utils/haddock/haddock-api/src/Haddock/Interface/Create.hs:135:11:     Note [Exporting built-in items]
ref    utils/haddock/haddock-api/src/Haddock/Interface/Create.hs:202:9:     Note [Exporting built-in items]
ref    utils/haddock/haddock-api/src/Haddock/Interface/Create.hs:283:7:     Note [Exporting built-in items]
ref    utils/haddock/haddock-api/src/Haddock/InterfaceFile.hs:115:3:     Note [The DocModule story]
ref    utils/haddock/haddock-api/src/Haddock/Types.hs:17:3:     Note [Pass sensitive types]

