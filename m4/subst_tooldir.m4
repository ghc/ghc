dnl Note [How we configure the bundled windows toolchain]
dnl ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
dnl As per Note [tooldir: How GHC finds mingw on Windows], when using the
dnl bundled windows toolchain, the GHC settings file must refer to the
dnl toolchain through a path relative to $tooldir (binary distributions on
dnl Windows should work without configure, so the paths must be relative to the
dnl installation). However, hadrian expects the configured toolchain to use
dnl full paths to the executable.
dnl
dnl This is how the bundled windows toolchain is configured, to define the
dnl toolchain with paths to the executables, while still writing into GHC
dnl settings the paths relative to $tooldir:
dnl
dnl * If using the bundled toolchain, FP_SETUP_WINDOWS_TOOLCHAIN will be invoked
dnl
dnl * FP_SETUP_WINDOWS_TOOLCHAIN will set the toolchain variables to paths
dnl   to the bundled toolchain (e.g. CFLAGS=/full/path/to/mingw/bin/gcc)
dnl
dnl * Later on, at the end of distrib/configure.ac, we substitute occurrences of the path to the
dnl   mingw tooldir by $tooldir (see SUBST_TOOLDIR).
dnl   The reason is the Settings* variants of toolchain variables are used by the bindist configure to
dnl   create the settings file, which needs the windows bundled toolchain to be relative to $tooldir.
dnl
dnl The ghc-toolchain program isn't concerned with any of these complications:
dnl it is passed either the full paths to the toolchain executables, or the bundled
dnl mingw path is set first on $PATH before invoking it. And ghc-toolchain
dnl will, as always, output target files with full paths to the executables.
dnl
dnl Hadrian accounts for this as it does for the toolchain executables
dnl configured by configure -- in fact, hadrian doesn't need to know whether
dnl the toolchain description file was generated by configure or by
dnl ghc-toolchain.

# SUBST_TOOLDIR
# ----------------------------------
# $1 - the filepath where to search for occurrences of the path to the
#      inplace mingw, and update by substituting said occurrences by
#      the value of $mingw_install_prefix, where the mingw toolchain will be at
#      install time
#
# See Note [How we configure the bundled windows toolchain]
AC_DEFUN([SUBST_TOOLDIR],
[
    sed -i.bkp $1 's%'"$mingw_prefix"'%'"$mingw_install_prefix"'%g'
])
